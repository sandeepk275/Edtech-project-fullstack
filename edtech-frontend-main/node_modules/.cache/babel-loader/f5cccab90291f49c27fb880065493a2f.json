{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandeep\\\\Desktop\\\\edtech project\\\\edtech-frontend-main\\\\src\\\\pages\\\\onboard\\\\forms\\\\SignupForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // imports for 3rd party libraries\n\nimport PropTypes from \"prop-types\"; // imports for components from MUI library\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Button from \"@material-ui/core/Button\"; // imports for custom hook\n\nimport { useForm } from \"../../../hooks\";\nimport validateSignupForm from \"./validateSignupForm\"; // imports for styles\n\nimport { useStyles } from \"../../../styles/formStyles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupForm = ({\n  successHandler\n}) => {\n  _s();\n\n  const initialFormValues = {\n    // the keys are similar to `name` attribute provided to form controls\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit\n  } = useForm(initialFormValues, validateSignupForm, successHandler);\n  const {\n    firstName,\n    lastName,\n    email,\n    password,\n    confirmPassword\n  } = values;\n  const [showPassword, setShowPassword] = useState(false);\n  const classes = useStyles();\n\n  const handleShowPasswordChange = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleShowPasswordMouseDown = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"signupForm\",\n    noValidate: true,\n    autoComplete: \"off\",\n    className: classes.signupForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.formControlsContainer,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"filled\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"signupFirstName\",\n          color: \"secondary\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n          id: \"signupFirstName\",\n          name: \"firstName\",\n          value: firstName,\n          onChange: handleChange,\n          autoComplete: \"on\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.error,\n          children: errors.firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"filled\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"signupLastName\",\n          color: \"secondary\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n          id: \"signupLastName\",\n          name: \"lastName\",\n          value: lastName,\n          onChange: handleChange,\n          autoComplete: \"on\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"filled\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"signupEmail\",\n          color: \"secondary\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n          id: \"signupEmail\",\n          name: \"email\",\n          type: \"email\",\n          value: email,\n          onChange: handleChange,\n          autoComplete: \"on\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.error,\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"filled\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"signupPassword\",\n          color: \"secondary\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n          id: \"signupPassword\",\n          name: \"password\",\n          type: showPassword ? \"text\" : \"password\",\n          value: password,\n          onChange: handleChange,\n          autoComplete: \"on\",\n          color: \"secondary\",\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleShowPasswordChange,\n              onMouseDown: handleShowPasswordMouseDown,\n              edge: \"end\",\n              children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 35\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 52\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.error,\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"filled\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"signupConfirmPassword\",\n          color: \"secondary\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n          id: \"signupConfirmPassword\",\n          name: \"confirmPassword\",\n          type: \"password\",\n          value: confirmPassword,\n          onChange: handleChange,\n          autoComplete: \"on\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.error,\n          children: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      fullWidth: true,\n      size: \"large\",\n      className: classes.formButton,\n      onClick: handleSubmit,\n      children: \"register me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupForm, \"DzzlnXKqJ/Ho2pD0zWvbGvscPdE=\", false, function () {\n  return [useForm, useStyles];\n});\n\n_c = SignupForm;\nSignupForm.propTypes = {\n  successHandler: PropTypes.func.isRequired\n};\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["C:/Users/sandeep/Desktop/edtech project/edtech-frontend-main/src/pages/onboard/forms/SignupForm.js"],"names":["React","useState","PropTypes","FormControl","InputLabel","FilledInput","InputAdornment","IconButton","Visibility","VisibilityOff","Button","useForm","validateSignupForm","useStyles","SignupForm","successHandler","initialFormValues","firstName","lastName","email","password","confirmPassword","values","errors","handleChange","handleSubmit","showPassword","setShowPassword","classes","handleShowPasswordChange","handleShowPasswordMouseDown","event","preventDefault","signupForm","formControlsContainer","error","formButton","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\n// imports for 3rd party libraries\nimport PropTypes from \"prop-types\";\n\n// imports for components from MUI library\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport Button from \"@material-ui/core/Button\";\n\n// imports for custom hook\nimport { useForm } from \"../../../hooks\";\nimport validateSignupForm from \"./validateSignupForm\";\n\n// imports for styles\nimport { useStyles } from \"../../../styles/formStyles.js\";\n\nconst SignupForm = ({ successHandler }) => {\n  const initialFormValues = {\n    // the keys are similar to `name` attribute provided to form controls\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  const { values, errors, handleChange, handleSubmit } = useForm(\n    initialFormValues,\n    validateSignupForm,\n    successHandler\n  );\n  const { firstName, lastName, email, password, confirmPassword } = values;\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const classes = useStyles();\n\n  const handleShowPasswordChange = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleShowPasswordMouseDown = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <form\n      id=\"signupForm\"\n      noValidate\n      autoComplete=\"off\"\n      className={classes.signupForm}\n    >\n      <div className={classes.formControlsContainer}>\n        <FormControl variant=\"filled\">\n          <InputLabel htmlFor=\"signupFirstName\" color=\"secondary\">\n            First Name\n          </InputLabel>\n          <FilledInput\n            id=\"signupFirstName\"\n            name=\"firstName\"\n            value={firstName}\n            onChange={handleChange}\n            autoComplete=\"on\"\n            color=\"secondary\"\n          />\n          {errors.firstName && (\n            <div className={classes.error}>{errors.firstName}</div>\n          )}\n        </FormControl>\n        <FormControl variant=\"filled\">\n          <InputLabel htmlFor=\"signupLastName\" color=\"secondary\">\n            Last Name\n          </InputLabel>\n          <FilledInput\n            id=\"signupLastName\"\n            name=\"lastName\"\n            value={lastName}\n            onChange={handleChange}\n            autoComplete=\"on\"\n            color=\"secondary\"\n          />\n        </FormControl>\n        <FormControl variant=\"filled\">\n          <InputLabel htmlFor=\"signupEmail\" color=\"secondary\">\n            Email\n          </InputLabel>\n          <FilledInput\n            id=\"signupEmail\"\n            name=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={handleChange}\n            autoComplete=\"on\"\n            color=\"secondary\"\n          />\n          {errors.email && <div className={classes.error}>{errors.email}</div>}\n        </FormControl>\n        <FormControl variant=\"filled\">\n          <InputLabel htmlFor=\"signupPassword\" color=\"secondary\">\n            Password\n          </InputLabel>\n          <FilledInput\n            id=\"signupPassword\"\n            name=\"password\"\n            type={showPassword ? \"text\" : \"password\"}\n            value={password}\n            onChange={handleChange}\n            autoComplete=\"on\"\n            color=\"secondary\"\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleShowPasswordChange}\n                  onMouseDown={handleShowPasswordMouseDown}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n          {errors.password && (\n            <div className={classes.error}>{errors.password}</div>\n          )}\n        </FormControl>\n        <FormControl variant=\"filled\">\n          <InputLabel htmlFor=\"signupConfirmPassword\" color=\"secondary\">\n            Confirm Password\n          </InputLabel>\n          <FilledInput\n            id=\"signupConfirmPassword\"\n            name=\"confirmPassword\"\n            type={\"password\"}\n            value={confirmPassword}\n            onChange={handleChange}\n            autoComplete=\"on\"\n            color=\"secondary\"\n          />\n          {errors.confirmPassword && (\n            <div className={classes.error}>{errors.confirmPassword}</div>\n          )}\n        </FormControl>\n      </div>\n\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        fullWidth={true}\n        size=\"large\"\n        className={classes.formButton}\n        onClick={handleSubmit}\n      >\n        register me\n      </Button>\n    </form>\n  );\n};\n\nSignupForm.propTypes = {\n  successHandler: PropTypes.func.isRequired,\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}