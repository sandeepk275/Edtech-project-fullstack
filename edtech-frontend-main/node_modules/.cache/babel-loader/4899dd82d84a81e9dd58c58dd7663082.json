{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandeep\\\\Desktop\\\\edtech project\\\\edtech-frontend-main\\\\src\\\\hooks\\\\useNotification.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // imports for custom components\n\nimport { MuiSnackbar } from \"../components/MUI/MuiSnackbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useNotification = props => {\n  _s();\n\n  const [isNotificationOpen, setIsNotificationOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const showNotification = msg => {\n    setIsNotificationOpen(true);\n    setMessage(msg);\n  };\n\n  const hideNotification = (_, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setIsNotificationOpen(false);\n    setMessage(\"\");\n\n    if (props && props.hideNotificationSuccessCallback) {\n      props.hideNotificationSuccessCallback();\n    }\n  };\n\n  const notification = /*#__PURE__*/_jsxDEV(MuiSnackbar, {\n    isOpen: isNotificationOpen,\n    message: message,\n    handleClose: hideNotification\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n\n  return {\n    notification,\n    showNotification\n  };\n};\n\n_s(useNotification, \"9SxwCj7XlUmTd+TE3n6qDjUvrzY=\");\n\nexport default useNotification;","map":{"version":3,"sources":["C:/Users/sandeep/Desktop/edtech project/edtech-frontend-main/src/hooks/useNotification.js"],"names":["React","useState","MuiSnackbar","useNotification","props","isNotificationOpen","setIsNotificationOpen","message","setMessage","showNotification","msg","hideNotification","_","reason","hideNotificationSuccessCallback","notification"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;;AACA,SAASC,WAAT,QAA4B,+BAA5B;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CL,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,gBAAgB,GAAIC,GAAD,IAAS;AAChCJ,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAE,IAAAA,UAAU,CAACE,GAAD,CAAV;AACD,GAHD;;AAKA,QAAMC,gBAAgB,GAAG,CAACC,CAAD,EAAIC,MAAJ,KAAe;AACtC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDP,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;;AACA,QAAIJ,KAAK,IAAIA,KAAK,CAACU,+BAAnB,EAAoD;AAClDV,MAAAA,KAAK,CAACU,+BAAN;AACD;AACF,GATD;;AAWA,QAAMC,YAAY,gBAChB,QAAC,WAAD;AACE,IAAA,MAAM,EAAEV,kBADV;AAEE,IAAA,OAAO,EAAEE,OAFX;AAGE,IAAA,WAAW,EAAEI;AAHf;AAAA;AAAA;AAAA;AAAA,UADF;;AAQA,SAAO;AAAEI,IAAAA,YAAF;AAAgBN,IAAAA;AAAhB,GAAP;AACD,CA7BD;;GAAMN,e;;AA+BN,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\";\n\n// imports for custom components\nimport { MuiSnackbar } from \"../components/MUI/MuiSnackbar\";\n\nconst useNotification = (props) => {\n  const [isNotificationOpen, setIsNotificationOpen] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const showNotification = (msg) => {\n    setIsNotificationOpen(true);\n    setMessage(msg);\n  };\n\n  const hideNotification = (_, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setIsNotificationOpen(false);\n    setMessage(\"\");\n    if (props && props.hideNotificationSuccessCallback) {\n      props.hideNotificationSuccessCallback();\n    }\n  };\n\n  const notification = (\n    <MuiSnackbar\n      isOpen={isNotificationOpen}\n      message={message}\n      handleClose={hideNotification}\n    />\n  );\n\n  return { notification, showNotification };\n};\n\nexport default useNotification;\n"]},"metadata":{},"sourceType":"module"}