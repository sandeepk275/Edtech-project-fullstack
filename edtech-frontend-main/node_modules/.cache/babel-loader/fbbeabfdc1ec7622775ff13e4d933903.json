{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandeep\\\\Desktop\\\\edtech project\\\\edtech-frontend-main\\\\src\\\\pages\\\\user\\\\checkout\\\\CheckoutPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from \"react\"; // imports for utils\n\nimport * as utils from \"../../../utils\"; // imports for 3rd party libraries\n\nimport { useHistory } from \"react-router-dom\"; // imports for routes\n\nimport * as routeConstants from \"../../../routes/routeConstants\"; // imports for MUI components\n\nimport { MuiPrimarySearchAppBar } from \"../../../components/MUI/MuiPrimarySearchAppBar\"; // imports for components from MUI library\n\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport Button from \"@material-ui/core/Button\"; // imports for custom components\n\nimport { Footer } from \"../../../components/UI/Footer\"; // imports for custom hook\n\nimport { useForm } from \"../../../hooks\";\nimport validateCheckoutForm from \"./validateCheckoutForm\"; // imports for styles\n\nimport classes from \"./CheckoutPage.module.css\";\nimport { useStyles } from \"../../../styles/formStyles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckoutPage = () => {\n  _s();\n\n  // merging all styles imported\n  const cssClasses = { ...classes,\n    ...useStyles()\n  };\n  const history = useHistory();\n  const initialFormValues = {\n    // the keys are similar to `name` attribute provided to form controls\n    flatOrBuilding: \"\",\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    pin: \"\",\n    phone: \"\"\n  };\n\n  const navigateToSummaryPage = () => {\n    // set details of address entered in local storage\n    utils.setInLocalStorage(utils.constants.LOCAL_STORAGE_KEY.ADDRESS, values);\n    history.push({\n      pathname: routeConstants.ROUTE_URL.SUMMARY\n    });\n  };\n\n  const {\n    values,\n    errors,\n    handleChange,\n    handleSubmit\n  } = useForm(initialFormValues, validateCheckoutForm, navigateToSummaryPage, false // determining if values of form control should be cleared\n  );\n  const {\n    flatOrBuilding,\n    street,\n    city,\n    state,\n    country,\n    pin,\n    phone\n  } = values; // get details of course selected by currently logged-in user\n\n  const courseDetails = utils.getFromLocalStorage(utils.constants.LOCAL_STORAGE_KEY.COURSE);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cssClasses.checkoutPage,\n    children: [/*#__PURE__*/_jsxDEV(MuiPrimarySearchAppBar, {\n      isLogoClickable: true,\n      isProfileVisible: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: cssClasses.checkoutPageContent,\n      children: courseDetails ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"inherit\",\n          component: \"h3\",\n          color: \"secondary\",\n          className: classes.checkoutPageHeading,\n          children: \"Address Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          id: \"addressForm\",\n          noValidate: true,\n          autoComplete: \"off\",\n          className: cssClasses.addressForm,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${cssClasses.addressFormControlsContainer} ${cssClasses.formControlsContainer}`,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"filled\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"flatOrBuilding\",\n                color: \"secondary\",\n                children: \"Flat / Building No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n                id: \"flatOrBuilding\",\n                name: \"flatOrBuilding\",\n                type: \"text\",\n                value: flatOrBuilding,\n                onChange: handleChange,\n                autoComplete: \"on\",\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), errors.flatOrBuilding && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: cssClasses.error,\n                children: errors.flatOrBuilding\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"filled\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"street\",\n                color: \"secondary\",\n                children: \"Street\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n                id: \"street\",\n                name: \"street\",\n                type: \"text\",\n                value: street,\n                onChange: handleChange,\n                autoComplete: \"on\",\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), errors.street && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: cssClasses.error,\n                children: errors.street\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"filled\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"city\",\n                color: \"secondary\",\n                children: \"City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n                id: \"city\",\n                name: \"city\",\n                type: \"text\",\n                value: city,\n                onChange: handleChange,\n                autoComplete: \"on\",\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 19\n              }, this), errors.city && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: cssClasses.error,\n                children: errors.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"filled\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"state\",\n                color: \"secondary\",\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n                id: \"state\",\n                name: \"state\",\n                type: \"text\",\n                value: state,\n                onChange: handleChange,\n                autoComplete: \"on\",\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), errors.state && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: cssClasses.error,\n                children: errors.state\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"filled\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"country\",\n                color: \"secondary\",\n                children: \"Country\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n                id: \"country\",\n                name: \"country\",\n                type: \"text\",\n                value: country,\n                onChange: handleChange,\n                autoComplete: \"on\",\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this), errors.country && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: cssClasses.error,\n                children: errors.country\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"filled\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"pin\",\n                color: \"secondary\",\n                children: \"Pin Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n                id: \"pin\",\n                name: \"pin\",\n                type: \"text\",\n                value: pin,\n                onChange: handleChange,\n                autoComplete: \"on\",\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this), errors.pin && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: cssClasses.error,\n                children: errors.pin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"filled\",\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                htmlFor: \"phone\",\n                color: \"secondary\",\n                children: \"Phone No.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FilledInput, {\n                id: \"phone\",\n                name: \"phone\",\n                type: \"text\",\n                value: phone,\n                onChange: handleChange,\n                autoComplete: \"on\",\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), errors.phone && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: cssClasses.error,\n                children: errors.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            fullWidth: true,\n            size: \"large\",\n            className: cssClasses.formButton,\n            onClick: handleSubmit,\n            children: \"show summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this) : history.push(routeConstants.ROUTE_URL.ROOT)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutPage, \"b4WQOirZXed7I3joSgAKxmMFZ14=\", false, function () {\n  return [useStyles, useHistory, useForm];\n});\n\n_c = CheckoutPage;\nexport default CheckoutPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutPage\");","map":{"version":3,"sources":["C:/Users/sandeep/Desktop/edtech project/edtech-frontend-main/src/pages/user/checkout/CheckoutPage.js"],"names":["React","Fragment","utils","useHistory","routeConstants","MuiPrimarySearchAppBar","Typography","FormControl","InputLabel","FilledInput","Button","Footer","useForm","validateCheckoutForm","classes","useStyles","CheckoutPage","cssClasses","history","initialFormValues","flatOrBuilding","street","city","state","country","pin","phone","navigateToSummaryPage","setInLocalStorage","constants","LOCAL_STORAGE_KEY","ADDRESS","values","push","pathname","ROUTE_URL","SUMMARY","errors","handleChange","handleSubmit","courseDetails","getFromLocalStorage","COURSE","checkoutPage","checkoutPageContent","checkoutPageHeading","addressForm","addressFormControlsContainer","formControlsContainer","error","formButton","ROOT"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\n\n// imports for utils\nimport * as utils from \"../../../utils\";\n\n// imports for 3rd party libraries\nimport { useHistory } from \"react-router-dom\";\n\n// imports for routes\nimport * as routeConstants from \"../../../routes/routeConstants\";\n\n// imports for MUI components\nimport { MuiPrimarySearchAppBar } from \"../../../components/MUI/MuiPrimarySearchAppBar\";\n\n// imports for components from MUI library\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport Button from \"@material-ui/core/Button\";\n\n// imports for custom components\nimport { Footer } from \"../../../components/UI/Footer\";\n\n// imports for custom hook\nimport { useForm } from \"../../../hooks\";\nimport validateCheckoutForm from \"./validateCheckoutForm\";\n\n// imports for styles\nimport classes from \"./CheckoutPage.module.css\";\nimport { useStyles } from \"../../../styles/formStyles.js\";\n\nconst CheckoutPage = () => {\n  // merging all styles imported\n  const cssClasses = { ...classes, ...useStyles() };\n\n  const history = useHistory();\n\n  const initialFormValues = {\n    // the keys are similar to `name` attribute provided to form controls\n    flatOrBuilding: \"\",\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    pin: \"\",\n    phone: \"\",\n  };\n\n  const navigateToSummaryPage = () => {\n    // set details of address entered in local storage\n    utils.setInLocalStorage(utils.constants.LOCAL_STORAGE_KEY.ADDRESS, values);\n    history.push({\n      pathname: routeConstants.ROUTE_URL.SUMMARY,\n    });\n  };\n\n  const { values, errors, handleChange, handleSubmit } = useForm(\n    initialFormValues,\n    validateCheckoutForm,\n    navigateToSummaryPage,\n    false // determining if values of form control should be cleared\n  );\n\n  const { flatOrBuilding, street, city, state, country, pin, phone } = values;\n\n  // get details of course selected by currently logged-in user\n  const courseDetails = utils.getFromLocalStorage(\n    utils.constants.LOCAL_STORAGE_KEY.COURSE\n  );\n\n  return (\n    <div className={cssClasses.checkoutPage}>\n      <MuiPrimarySearchAppBar isLogoClickable={true} isProfileVisible={true} />\n      <main className={cssClasses.checkoutPageContent}>\n        {courseDetails ? (\n          <Fragment>\n            <Typography\n              variant=\"inherit\"\n              component=\"h3\"\n              color=\"secondary\"\n              className={classes.checkoutPageHeading}\n            >\n              Address Form\n            </Typography>\n            <form\n              id=\"addressForm\"\n              noValidate\n              autoComplete=\"off\"\n              className={cssClasses.addressForm}\n            >\n              <div\n                className={`${cssClasses.addressFormControlsContainer} ${cssClasses.formControlsContainer}`}\n              >\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"flatOrBuilding\" color=\"secondary\">\n                    Flat / Building No.\n                  </InputLabel>\n                  <FilledInput\n                    id=\"flatOrBuilding\"\n                    name=\"flatOrBuilding\"\n                    type=\"text\"\n                    value={flatOrBuilding}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.flatOrBuilding && (\n                    <div className={cssClasses.error}>\n                      {errors.flatOrBuilding}\n                    </div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"street\" color=\"secondary\">\n                    Street\n                  </InputLabel>\n                  <FilledInput\n                    id=\"street\"\n                    name=\"street\"\n                    type=\"text\"\n                    value={street}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.street && (\n                    <div className={cssClasses.error}>{errors.street}</div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"city\" color=\"secondary\">\n                    City\n                  </InputLabel>\n                  <FilledInput\n                    id=\"city\"\n                    name=\"city\"\n                    type=\"text\"\n                    value={city}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.city && (\n                    <div className={cssClasses.error}>{errors.city}</div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"state\" color=\"secondary\">\n                    State\n                  </InputLabel>\n                  <FilledInput\n                    id=\"state\"\n                    name=\"state\"\n                    type=\"text\"\n                    value={state}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.state && (\n                    <div className={cssClasses.error}>{errors.state}</div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"country\" color=\"secondary\">\n                    Country\n                  </InputLabel>\n                  <FilledInput\n                    id=\"country\"\n                    name=\"country\"\n                    type=\"text\"\n                    value={country}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.country && (\n                    <div className={cssClasses.error}>{errors.country}</div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"pin\" color=\"secondary\">\n                    Pin Code\n                  </InputLabel>\n                  <FilledInput\n                    id=\"pin\"\n                    name=\"pin\"\n                    type=\"text\"\n                    value={pin}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.pin && (\n                    <div className={cssClasses.error}>{errors.pin}</div>\n                  )}\n                </FormControl>\n                <FormControl variant=\"filled\">\n                  <InputLabel htmlFor=\"phone\" color=\"secondary\">\n                    Phone No.\n                  </InputLabel>\n                  <FilledInput\n                    id=\"phone\"\n                    name=\"phone\"\n                    type=\"text\"\n                    value={phone}\n                    onChange={handleChange}\n                    autoComplete=\"on\"\n                    color=\"secondary\"\n                  />\n                  {errors.phone && (\n                    <div className={cssClasses.error}>{errors.phone}</div>\n                  )}\n                </FormControl>\n              </div>\n\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                fullWidth={true}\n                size=\"large\"\n                className={cssClasses.formButton}\n                onClick={handleSubmit}\n              >\n                show summary\n              </Button>\n            </form>\n          </Fragment>\n        ) : (\n          history.push(routeConstants.ROUTE_URL.ROOT)\n        )}\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default CheckoutPage;\n"]},"metadata":{},"sourceType":"module"}