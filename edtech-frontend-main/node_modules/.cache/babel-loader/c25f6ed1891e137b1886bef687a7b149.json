{"ast":null,"code":"import * as utils from \"../../../utils\";\n\nconst validateSignupForm = values => {\n  let errors = {};\n  /*\n   Rule 1: firstName is required\n   */\n\n  if (!values.firstName.trim()) {\n    errors.firstName = \"Required\";\n  }\n  /*\n   Rule 2: email is required\n   Rule 3: email should be valid\n   */\n\n\n  if (!values.email.trim()) {\n    errors.email = \"Required\";\n  } else if (!utils.checkValidEmail(values.email)) {\n    errors.email = \"Invalid email\";\n  }\n  /*\n   Rule 4: password is required\n   Rule 5: password should be atleast 6 characters long\n   */\n\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length < 6) {\n    errors.password = \"Password should be atleast 6 characters long\";\n  }\n  /*\n   Rule 6: confirm password is required\n   Rule 7: confirm password should be equal to password\n   */\n\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"Required\";\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = \"Passwords do not match\";\n  }\n\n  return errors;\n};\n\nexport default validateSignupForm;","map":{"version":3,"sources":["C:/Users/sandeep/Desktop/edtech project/edtech-frontend-main/src/pages/onboard/forms/validateSignupForm.js"],"names":["utils","validateSignupForm","values","errors","firstName","trim","email","checkValidEmail","password","length","confirmPassword"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,gBAAvB;;AAEA,MAAMC,kBAAkB,GAAIC,MAAD,IAAY;AACrC,MAAIC,MAAM,GAAG,EAAb;AAEA;AACF;AACA;;AACE,MAAI,CAACD,MAAM,CAACE,SAAP,CAAiBC,IAAjB,EAAL,EAA8B;AAC5BF,IAAAA,MAAM,CAACC,SAAP,GAAmB,UAAnB;AACD;AAED;AACF;AACA;AACA;;;AACE,MAAI,CAACF,MAAM,CAACI,KAAP,CAAaD,IAAb,EAAL,EAA0B;AACxBF,IAAAA,MAAM,CAACG,KAAP,GAAe,UAAf;AACD,GAFD,MAEO,IAAI,CAACN,KAAK,CAACO,eAAN,CAAsBL,MAAM,CAACI,KAA7B,CAAL,EAA0C;AAC/CH,IAAAA,MAAM,CAACG,KAAP,GAAe,eAAf;AACD;AAED;AACF;AACA;AACA;;;AACE,MAAI,CAACJ,MAAM,CAACM,QAAZ,EAAsB;AACpBL,IAAAA,MAAM,CAACK,QAAP,GAAkB,UAAlB;AACD,GAFD,MAEO,IAAIN,MAAM,CAACM,QAAP,CAAgBC,MAAhB,GAAyB,CAA7B,EAAgC;AACrCN,IAAAA,MAAM,CAACK,QAAP,GAAkB,8CAAlB;AACD;AAED;AACF;AACA;AACA;;;AACE,MAAI,CAACN,MAAM,CAACQ,eAAZ,EAA6B;AAC3BP,IAAAA,MAAM,CAACO,eAAP,GAAyB,UAAzB;AACD,GAFD,MAEO,IAAIR,MAAM,CAACM,QAAP,KAAoBN,MAAM,CAACQ,eAA/B,EAAgD;AACrDP,IAAAA,MAAM,CAACO,eAAP,GAAyB,wBAAzB;AACD;;AAED,SAAOP,MAAP;AACD,CAzCD;;AA2CA,eAAeF,kBAAf","sourcesContent":["import * as utils from \"../../../utils\";\n\nconst validateSignupForm = (values) => {\n  let errors = {};\n\n  /*\n   Rule 1: firstName is required\n   */\n  if (!values.firstName.trim()) {\n    errors.firstName = \"Required\";\n  }\n\n  /*\n   Rule 2: email is required\n   Rule 3: email should be valid\n   */\n  if (!values.email.trim()) {\n    errors.email = \"Required\";\n  } else if (!utils.checkValidEmail(values.email)) {\n    errors.email = \"Invalid email\";\n  }\n\n  /*\n   Rule 4: password is required\n   Rule 5: password should be atleast 6 characters long\n   */\n  if (!values.password) {\n    errors.password = \"Required\";\n  } else if (values.password.length < 6) {\n    errors.password = \"Password should be atleast 6 characters long\";\n  }\n\n  /*\n   Rule 6: confirm password is required\n   Rule 7: confirm password should be equal to password\n   */\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"Required\";\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = \"Passwords do not match\";\n  }\n\n  return errors;\n};\n\nexport default validateSignupForm;\n"]},"metadata":{},"sourceType":"module"}