{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandeep\\\\Downloads\\\\edtech-frontend-main\\\\edtech-frontend-main\\\\src\\\\routes\\\\ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // imports for 3rd party libraries\n\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\"; // imports for custom hooks\n\nimport { useAuth, authConstants } from \"../contexts/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    isLoggedIn,\n    getLoggedInUserDetails\n  } = useAuth();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => {\n      if (rest.role === authConstants.ROLE.USER) {\n        if (isLoggedIn && getLoggedInUserDetails().role === authConstants.ROLE.USER) {\n          return /*#__PURE__*/_jsxDEV(Component, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 20\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: {\n              pathname: \"/login\",\n              state: {\n                from: props.location\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this);\n        }\n      }\n\n      if (rest.role === authConstants.ROLE.ADMIN) {\n        if (isLoggedIn && getLoggedInUserDetails().role === authConstants.ROLE.ADMIN) {\n          return /*#__PURE__*/_jsxDEV(Component, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 20\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: {\n              pathname: \"/login\",\n              state: {\n                from: props.location\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this);\n        }\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProtectedRoute, \"8Xvrl1xqAUUH2eaQBoR606DIp3A=\", false, function () {\n  return [useAuth];\n});\n\n_c = ProtectedRoute;\nProtectedRoute.propTypes = {\n  role: PropTypes.string.isRequired\n};\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"sources":["C:/Users/sandeep/Downloads/edtech-frontend-main/edtech-frontend-main/src/routes/ProtectedRoute.js"],"names":["React","Route","Redirect","PropTypes","useAuth","authConstants","ProtectedRoute","component","Component","rest","isLoggedIn","getLoggedInUserDetails","props","role","ROLE","USER","pathname","state","from","location","ADMIN","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,kBAAvC;;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AACnE,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAyCP,OAAO,EAAtD;AAEA,sBACE,QAAC,KAAD,OACMK,IADN;AAEE,IAAA,MAAM,EAAGG,KAAD,IAAW;AACjB,UAAIH,IAAI,CAACI,IAAL,KAAcR,aAAa,CAACS,IAAd,CAAmBC,IAArC,EAA2C;AACzC,YACEL,UAAU,IACVC,sBAAsB,GAAGE,IAAzB,KAAkCR,aAAa,CAACS,IAAd,CAAmBC,IAFvD,EAGE;AACA,8BAAO,QAAC,SAAD,OAAeH;AAAf;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SALD,MAKO;AACL,8BACE,QAAC,QAAD;AACE,YAAA,EAAE,EAAE;AACFI,cAAAA,QAAQ,EAAE,QADR;AAEFC,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,IAAI,EAAEN,KAAK,CAACO;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD;AACF;;AAED,UAAIV,IAAI,CAACI,IAAL,KAAcR,aAAa,CAACS,IAAd,CAAmBM,KAArC,EAA4C;AAC1C,YACEV,UAAU,IACVC,sBAAsB,GAAGE,IAAzB,KAAkCR,aAAa,CAACS,IAAd,CAAmBM,KAFvD,EAGE;AACA,8BAAO,QAAC,SAAD,OAAeR;AAAf;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SALD,MAKO;AACL,8BACE,QAAC,QAAD;AACE,YAAA,EAAE,EAAE;AACFI,cAAAA,QAAQ,EAAE,QADR;AAEFC,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,IAAI,EAAEN,KAAK,CAACO;AAAd;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD;AACF;AACF;AAtCH;AAAA;AAAA;AAAA;AAAA,UADF;AA0CD,CA7CM;;GAAMb,c;UACoCF,O;;;KADpCE,c;AA+CbA,cAAc,CAACe,SAAf,GAA2B;AACzBR,EAAAA,IAAI,EAAEV,SAAS,CAACmB,MAAV,CAAiBC;AADE,CAA3B;AAIA,eAAejB,cAAf","sourcesContent":["import React from \"react\";\n\n// imports for 3rd party libraries\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\n// imports for custom hooks\nimport { useAuth, authConstants } from \"../contexts/auth\";\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\n  const { isLoggedIn, getLoggedInUserDetails } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (rest.role === authConstants.ROLE.USER) {\n          if (\n            isLoggedIn &&\n            getLoggedInUserDetails().role === authConstants.ROLE.USER\n          ) {\n            return <Component {...props} />;\n          } else {\n            return (\n              <Redirect\n                to={{\n                  pathname: \"/login\",\n                  state: { from: props.location },\n                }}\n              />\n            );\n          }\n        }\n\n        if (rest.role === authConstants.ROLE.ADMIN) {\n          if (\n            isLoggedIn &&\n            getLoggedInUserDetails().role === authConstants.ROLE.ADMIN\n          ) {\n            return <Component {...props} />;\n          } else {\n            return (\n              <Redirect\n                to={{\n                  pathname: \"/login\",\n                  state: { from: props.location },\n                }}\n              />\n            );\n          }\n        }\n      }}\n    />\n  );\n};\n\nProtectedRoute.propTypes = {\n  role: PropTypes.string.isRequired,\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}