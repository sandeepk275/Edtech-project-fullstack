{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sandeep\\\\Downloads\\\\edtech-frontend-main\\\\edtech-frontend-main\\\\src\\\\components\\\\MUI\\\\MuiSingleLineGridList\\\\SingleLineGridList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // imports for 3rd party libraries\n\nimport PropTypes from \"prop-types\"; // imports for components from Material UI library\n\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\"; // imports for styles\n\nimport { useStyles } from \"./styles.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingleLineGridList = ({\n  width,\n  data,\n  handleClick\n}) => {\n  _s();\n\n  const classes = useStyles();\n\n  const getGridListCols = () => {\n    if (isWidthUp(\"xl\", width) || isWidthUp(\"lg\", width)) {\n      return 3;\n    }\n\n    if (isWidthUp(\"md\", width)) {\n      return 2;\n    }\n\n    return 1;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.gridListContainer,\n    children: /*#__PURE__*/_jsxDEV(GridList, {\n      className: classes.gridList,\n      cols: getGridListCols(),\n      children: data.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n        className: classes.gridListItem,\n        onClick: () => handleClick(tile),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: tile.imageURL,\n          alt: tile.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n          title: tile.title,\n          classes: {\n            root: classes.titleBar,\n            title: classes.title\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, tile._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SingleLineGridList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = SingleLineGridList;\nSingleLineGridList.propTypes = {\n  width: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  handleClick: PropTypes.func.isRequired\n};\nexport const EnhancedSingleLineGridList = withWidth()(SingleLineGridList);\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleLineGridList\");","map":{"version":3,"sources":["C:/Users/sandeep/Downloads/edtech-frontend-main/edtech-frontend-main/src/components/MUI/MuiSingleLineGridList/SingleLineGridList.js"],"names":["React","PropTypes","GridList","GridListTile","GridListTileBar","withWidth","isWidthUp","useStyles","SingleLineGridList","width","data","handleClick","classes","getGridListCols","gridListContainer","gridList","map","tile","gridListItem","imageURL","title","root","titleBar","_id","propTypes","string","isRequired","array","func","EnhancedSingleLineGridList"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,SAAP,IAAoBC,SAApB,QAAqC,6BAArC,C,CAEA;;AACA,SAASC,SAAT,QAA0B,aAA1B;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,CAAD,KAAkC;AAAA;;AAC3D,QAAMC,OAAO,GAAGL,SAAS,EAAzB;;AAEA,QAAMM,eAAe,GAAG,MAAM;AAC5B,QAAIP,SAAS,CAAC,IAAD,EAAOG,KAAP,CAAT,IAA0BH,SAAS,CAAC,IAAD,EAAOG,KAAP,CAAvC,EAAsD;AACpD,aAAO,CAAP;AACD;;AAED,QAAIH,SAAS,CAAC,IAAD,EAAOG,KAAP,CAAb,EAA4B;AAC1B,aAAO,CAAP;AACD;;AAED,WAAO,CAAP;AACD,GAVD;;AAYA,sBACE;AAAS,IAAA,SAAS,EAAEG,OAAO,CAACE,iBAA5B;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEF,OAAO,CAACG,QAA7B;AAAuC,MAAA,IAAI,EAAEF,eAAe,EAA5D;AAAA,gBACGH,IAAI,CAACM,GAAL,CAAUC,IAAD,iBACR,QAAC,YAAD;AAEE,QAAA,SAAS,EAAEL,OAAO,CAACM,YAFrB;AAGE,QAAA,OAAO,EAAE,MAAMP,WAAW,CAACM,IAAD,CAH5B;AAAA,gCAKE;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACE,QAAf;AAAyB,UAAA,GAAG,EAAEF,IAAI,CAACG;AAAnC;AAAA;AAAA;AAAA;AAAA,gBALF,eAME,QAAC,eAAD;AACE,UAAA,KAAK,EAAEH,IAAI,CAACG,KADd;AAEE,UAAA,OAAO,EAAE;AACPC,YAAAA,IAAI,EAAET,OAAO,CAACU,QADP;AAEPF,YAAAA,KAAK,EAAER,OAAO,CAACQ;AAFR;AAFX;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SACOH,IAAI,CAACM,GADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CArCD;;GAAMf,kB;UACYD,S;;;KADZC,kB;AAuCNA,kBAAkB,CAACgB,SAAnB,GAA+B;AAC7Bf,EAAAA,KAAK,EAAER,SAAS,CAACwB,MAAV,CAAiBC,UADK;AAE7BhB,EAAAA,IAAI,EAAET,SAAS,CAAC0B,KAAV,CAAgBD,UAFO;AAG7Bf,EAAAA,WAAW,EAAEV,SAAS,CAAC2B,IAAV,CAAeF;AAHC,CAA/B;AAMA,OAAO,MAAMG,0BAA0B,GAAGxB,SAAS,GAAGG,kBAAH,CAA5C","sourcesContent":["import React from \"react\";\n\n// imports for 3rd party libraries\nimport PropTypes from \"prop-types\";\n\n// imports for components from Material UI library\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\n\n// imports for styles\nimport { useStyles } from \"./styles.js\";\n\nconst SingleLineGridList = ({ width, data, handleClick }) => {\n  const classes = useStyles();\n\n  const getGridListCols = () => {\n    if (isWidthUp(\"xl\", width) || isWidthUp(\"lg\", width)) {\n      return 3;\n    }\n\n    if (isWidthUp(\"md\", width)) {\n      return 2;\n    }\n\n    return 1;\n  };\n\n  return (\n    <section className={classes.gridListContainer}>\n      <GridList className={classes.gridList} cols={getGridListCols()}>\n        {data.map((tile) => (\n          <GridListTile\n            key={tile._id}\n            className={classes.gridListItem}\n            onClick={() => handleClick(tile)}\n          >\n            <img src={tile.imageURL} alt={tile.title} />\n            <GridListTileBar\n              title={tile.title}\n              classes={{\n                root: classes.titleBar,\n                title: classes.title,\n              }}\n            />\n          </GridListTile>\n        ))}\n      </GridList>\n    </section>\n  );\n};\n\nSingleLineGridList.propTypes = {\n  width: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nexport const EnhancedSingleLineGridList = withWidth()(SingleLineGridList);\n"]},"metadata":{},"sourceType":"module"}